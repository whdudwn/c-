#include<stdio.h>
#include<stdlib.h>

typedef struct QueueNode {
	int data;
	struct QueueNode* next;
}QueueNode;

typedef struct Queue {
	QueueNode* front;
	QueueNode* rear;
}Queue;

void inisQueue(Queue* q) {
	q->front = NULL;
	q->rear = NULL;
}
void createNode() {
	QueueNode* newNode;
	newNode = (QueueNode*)malloc(sizeof(QueueNode));
	int num;
	printf("정수 입력:");
	scanf("%d", num);
	newNode->data = num;
	newNode->next = NULL;
	return newNode;
}
void enQueue(Queue* q) {
	QueueNode* newNode;
	newNode = createNode();

	if (q->front == NULL) {
		q->front = newNode;
	}
	else{
		q->rear->next = newNode;
	}
	q->front = newNode;
}
void printQueue(Queue* q) {

	if (q->front == NULL){
		printf("큐가 비었다\n");
		return;
	}
	QueueNode* searcher = q->front;
	while (searcher != NULL) {
		printf("%d->", searcher->data);
		searcher = searcher->next;
	};
	printf("%d", searcher->data);
	printf("\n");
}
//dequeue
void dequeue(Queue* q) {
	if (q->front == NULL) {
		printf("큐가 비었음\n");
		return;
	}
	QueueNode* target = q->front;
	printf("%d는 빠집니다.\n", target->data);
	q->front = target->next;

	if (q->front == NULL){
		q->rear=NULL; 
	}
}


int main() {
	Queue q;
	inisQueue(&q);

	enQueue(&q);
	enQueue(&q);
	enQueue(&q);
	dequeue(&q);
	printQueue(&q);
	
	return 0;
}
